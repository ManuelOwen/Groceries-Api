@url = http://localhost:8000/api/v1
@adminToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjQwLCJlbWFpbCI6ImJpbGx5QGdtYWlsLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1MjEzNjAxNSwiZXhwIjoxNzUyMTM5NjE1fQ.zkb0cfouLPrPyhweaMcBk9OvYISM7bWXN-2d5iOHjuc
@userToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE5LCJlbWFpbCI6InRlbkBleGFtcGxlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzUxNDU0MjMyLCJleHAiOjE3NTE0NTc4MzJ9.4-loc3xi9kvriyaGWLYdeMeobGdAq0Om8p2U7GhYXMA
@driverToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjM3LCJlbWFpbCI6ImNhdGVqb2V5QGV4YW1wbGUuY29tIiwicm9sZSI6ImRyaXZlciIsImlhdCI6MTc1MTk3MzEyNywiZXhwIjoxNzUxOTc2NzI3fQ.Hfe4uqijSnBX9_3a6hRqRWV2nXh7ZiVKi6zzq_Wxm_s
### get all users
GET {{url}}/users
Authorization: Bearer {{adminToken}}

### seed database (all data)
POST {{url}}/seed

### seed only payments
POST {{url}}/seed/payments

### seed only orders
POST {{url}}/seed/orders

### get users by id
GET {{url}}/users/23
Authorization: Bearer {{adminToken}}
### create a new user
POST {{url}}/auth/register
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "email": "catejoey@example.com",
  "fullName": "cate joey",
  "address": "789 Oak St, City, Country",
  "password": "Password123",
  "phoneNumber": "+2547034989534",
  "role": "driver"
}
### update a user
PUT {{url}}/users/23
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "email": "kimani@example.com",
  "fullName": "Kimani ichungwa",
  "address": "789 Oak St, City, Country",
  "password": "Password123",
  "phoneNumber": "+254703498941",
  "role": "driver"
}
### delete a user
DELETE {{url}}/users/2
### login a user
POST {{url}}/auth/login
Content-Type: application/json

{
  "email": "ten@example.com",
  "password": "password123"
}
### login as a user
POST {{url}}/auth/login
Content-Type: application/json

{
  "email": "ten@example.com",
  "password": "password123"
}
### login as an admin
POST {{url}}/auth/login
Content-Type: application/json

{
  "email": "billy@gmail.com",
  "password": "Password123"
}

### login as driver
POST {{url}}/auth/login
Content-Type: application/json

{
  "email": "catejoey@example.com",
  "password": "Password123"
}

### PRODUCTS ENDPOINTS ###

### Get all products (public access)
GET {{url}}/products
Authorization: Bearer {{adminToken}}

### Get product by id (public access)
GET {{url}}/products/4

### Create a new product (admin only)
POST {{url}}/products
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "product_name": "onions",
  "availability": true,
  "price": 1.99,
  "category": "Vegetables",
  "imageUrl": "https://example.com/onions.jpg"
}

### Update a product (admin only)
PUT {{url}}/products/3
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "product_name": "Updated Premium Oranges",
  "availability": true,
  "price": 12.49,
  "category": "Fruits",
  "imageUrl": "https://example.com/updated-oranges.jpg"
}

### Delete a product (admin only)
DELETE {{url}}/products/1
Authorization: Bearer {{adminToken}}

### Upload a product image (admin only)
POST {{url}}/products/upload
Authorization: Bearer {{adminToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="onions.jpg"
Content-Type: image/jpeg

< ./uploads/products/onions.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### LOCATION ENDPOINTS ###

### Get all locations (public access)
GET {{url}}/location

### Get location by id (public access)
GET {{url}}/location/1

### Create a new location (admin only)
POST {{url}}/location
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "location_name": "Central Market",
  "address": "123 Main St, Nairobi, Kenya",
  "postal_code": "00100"
}

### Update a location (admin only)
PUT {{url}}/location/1
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "location_name": "Central Market Updated",
  "address": "123 Main St, Nairobi, Kenya",
  "postal_code": "00100"
}

### Delete a location (admin only)
DELETE {{url}}/location/1
Authorization: Bearer {{adminToken}}

### get all products
GET {{url}}/products
#### seed products
POST {{url}}/seed


### locations
### Get all locations
GET {{url}}/location
### seed locations
POST {{url}}/seed/locations
Authorization: Bearer {{adminToken}}
### Get location by id
GET {{url}}/location/3

### Create a new location
POST {{url}}/location
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "location_name": "Central Market",
  "address": "123 Main St, Nairobi, Kenya",
  "postal_code": "00100"
}

### Update a location
PUT {{url}}/location/3
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "location_name": "Central Market Updated",
  "address": "123 Main St, Mombasa, Kenya",
  "postal_code": "00100"
}
### Delete a location
DELETE {{url}}/location/3
Authorization: Bearer {{adminToken}}

### PAYMENTS ENDPOINTS ###

### Get all payments (admin only)
GET {{url}}/payments
Authorization: Bearer {{adminToken}}

### Get payment by id (admin and user)
GET {{url}}/payments/1
Authorization: Bearer {{adminToken}}

### Get payments by user id (admin and user)
GET {{url}}/payments/user/1
Authorization: Bearer {{adminToken}}

### Create a new payment (admin and user) - Auto-generated transaction ID
POST {{url}}/payments
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "amount": 100.50,
  "payment_method": "mpesa",
  "user_id": 19,
  "status": "pending",
  "description": "Payment for groceries - Auto transaction ID"
}

### Create a new payment with custom transaction ID (optional)
POST {{url}}/payments
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "amount": 250.75,
  "payment_method": "card",
  "user_id": 19,
  "status": "completed",

  "description": "Payment with custom transaction ID"
}

### Update a payment (admin only)
PUT {{url}}/payments/2
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "amount": 180.75,
  "payment_method": "card",
  "status": "completed",
  "transaction_id": "TX987654321",
  "reference_number": "REF456",
  "description": "Updated payment for groceries"
}

### Delete a payment (admin only)
DELETE {{url}}/payments/1
Authorization: Bearer {{adminToken}}

### ORDERS ENDPOINTS ###

### Get all orders (admin and driver only)
GET {{url}}/orders
Authorization: Bearer {{adminToken}}

### Get order by id (admin, user, and driver)
GET {{url}}/orders/10
Authorization: Bearer {{adminToken}}

### Get orders by user id (admin and user)
GET {{url}}/orders/user/19
Authorization: Bearer {{adminToken}}

### Get orders by status (admin and driver)
GET {{url}}/orders/status/pending
Authorization: Bearer {{adminToken}}

### Create a new order (admin and user) - Auto-generated order number
POST {{url}}/orders
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "total_amount": 150.75,
  "user_id": 19,
  "status": "pending",
  "priority": "normal",
  "shipping_address": "123 Main St, Nairobi, Kenya",
  "billing_address": "123 Main St, Nairobi, Kenya",
  "notes": "Please deliver during business hours"
}

### Create a new order with custom order number (optional)
POST {{url}}/orders
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "total_amount": 89.50,
  "user_id": 19,
  "status": "confirmed",
  "priority": "high",
  "order_number": "CUSTOM20250702001",
  "shipping_address": "456 Oak Ave, Nairobi, Kenya",
  "billing_address": "456 Oak Ave, Nairobi, Kenya",
  "notes": "Urgent delivery required"
}

### Update an order (admin and driver only)
PUT {{url}}/orders/14
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "shipped",
  "priority": "high",
  "notes": "Order has been shipped via express delivery"
}

### Delete an order (admin only)
DELETE {{url}}/orders/14
Authorization: Bearer {{adminToken}}

### seed orders
POST {{url}}/seed/orders

### FEEDBACKS ENDPOINTS ###

### Get all feedbacks (admin only)
GET {{url}}/feedbacks
Authorization: Bearer {{adminToken}}

### Get feedback by id (admin and user)
GET {{url}}/feedbacks/1
Authorization: Bearer {{adminToken}}

### Get feedbacks by user id (admin and user)
GET {{url}}/feedbacks/user/19
Authorization: Bearer {{adminToken}}

### Get feedbacks by status (admin only)
GET {{url}}/feedbacks/status/pending
Authorization: Bearer {{adminToken}}

### Create a new feedback (admin and user)
POST {{url}}/feedbacks
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "message": "Great service! Very satisfied with the delivery speed.",
  "rating": 5,
  "subject": "Excellent Delivery Experience",
  "user_id": 19
}

### Create another feedback with different rating
POST {{url}}/feedbacks
Authorization: Bearer {{userToken}}
Content-Type: application/json

{
  "message": "The product quality was good but delivery was delayed.",
  "rating": 3,
  "subject": "Mixed Experience",
  "user_id": 19
}

### Update a feedback (admin for status, users for content)
PUT {{url}}/feedbacks/1
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "reviewed",
  "admin_response": "Thank you for your feedback. We appreciate your review and will continue to maintain our service quality."
}

### Delete a feedback (admin only)
DELETE {{url}}/feedbacks/1
Authorization: Bearer {{adminToken}}

### seed feedbacks
POST {{url}}/seed/feedbacks
Authorization: Bearer {{adminToken}}

### CUSTOMER SUPPORT ENDPOINTS ###

### Get all support tickets (admin only)
GET {{url}}/customers-support
Authorization: Bearer {{adminToken}}

### Get support ticket by id (admin and user)
GET {{url}}/customers-support/6
Authorization: Bearer {{adminToken}}

### Get support tickets by user id (admin and user)
GET {{url}}/customers-support/user/19
Authorization: Bearer {{adminToken}}

### Get support tickets by status (admin only)
GET {{url}}/customers-support/status/open
Authorization: Bearer {{adminToken}}

### Create a new support ticket (admin and user)
POST {{url}}/customers-support
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "subject": "Order delivery issue",
  "description": "My order was supposed to be delivered yesterday but I haven't received it yet. The tracking shows delivered but I didn't get anything.",
  "priority": "high",
  "category": "order_issue",
  "user_id": 19,
  "contact_email": "ten@example.com",
  "contact_phone": "+1234567890"
}

### Create a technical support ticket
POST {{url}}/customers-support
Authorization: Bearer {{userToken}}
Content-Type: application/json

{
  "subject": "Unable to login to my account",
  "description": "I'm getting an error message when trying to log into my account. It says 'Invalid credentials' even though I'm using the correct password.",
  "priority": "medium",
  "category": "technical",
  "user_id": 19,
  "contact_email": "ten@example.com"
}

### Update a support ticket (admin for status/response, users for their own content)
PUT {{url}}/customers-support/7
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "in_progress",
  "admin_response": "Hi, we've located your order and it seems there was a delivery issue. Our driver will attempt redelivery today between 2-4 PM. You'll receive a tracking update shortly.",
  "assigned_to": 20
}

### Update ticket status to resolved
PUT {{url}}/customers-support/8
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "status": "resolved",
  "admin_response": "Your order has been successfully redelivered. Thank you for your patience. If you have any other concerns, please don't hesitate to contact us."
}

### Delete a support ticket (admin only)
DELETE {{url}}/customers-support/7
Authorization: Bearer {{adminToken}}

### seed customer support tickets
POST {{url}}/seed/customers-support
Authorization: Bearer {{adminToken}}

### DRIVERS ENDPOINTS ###
### Get all drivers (admin only)
GET {{url}}/drivers
Authorization: Bearer {{adminToken}}
### Get driver by id (admin and driver)
GET {{url}}/drivers/1
Authorization: Bearer {{adminToken}}
### Create a new driver (admin only)
POST {{url}}/drivers
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "driver_number": "DR123456",
  "driver_name": "mathew john",
  "license_number": "LIC123456",
  "order_id": 1,
  "user_id": 23,
  "vehicle_type": "motorcycle",
  "vehicle_registration": "KBC1234",
  "verification_status": "pending",
  "total_deliveries": 3

}
#### get drivers with orders
GET {{url}}/drivers/orders
Authorization: Bearer {{adminToken}}
Authorization: Bearer {{driverToken}}